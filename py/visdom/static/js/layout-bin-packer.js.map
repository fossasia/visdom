{"version":3,"file":"layout-bin-packer.js","sources":["../lib/layout-bin-packer/bin.js","../lib/layout-bin-packer/entry.js","../lib/layout-bin-packer/shelf-first.js","../lib/layout-bin-packer/fixed-grid.js"],"sourcesContent":["import Entry from './entry';\n\n// I don't think this should have args\nexport default function Bin(content, width) {\n  this.width = width || 0;\n  this.content = content;\n}\n\nfunction mustImplement(name) {\n  return function() {\n    throw new TypeError(\"MustImplement: \" + name );\n  };\n}\n\n// abstract\nBin.prototype.objectAt = function (collection, index) {\n  return collection[index];\n};\n\n// abstract: return coordinates of element at index.\n//\n// @param index: index of the element in content\n// @param width: viewport width.\n// @returns {x, y} coordinates of element at index.\n//\n// May reset cached viewport width.\nBin.prototype.position = mustImplement('position');\n\n// abstract: reset internal state to be anchored at index.\n// @param index: index of the element in content\nBin.prototype.flush = mustImplement('flush');\n\n// abstract: return total content height given viewport width.\n// @param width: viewport width\n//\n// May reset cached viewport width.\nBin.prototype.height = mustImplement('height');\n\n// abstract: true if layout places more than one object on a line.\nBin.prototype.isGrid = mustImplement('isGrid');\n\nexport function rangeError(length, index) {\n  throw new RangeError(\"Parameter must be within: [\" + 0 + \" and \" + length + \") but was: \" + index);\n}\n\n// abstract: returns number of elements in content.\nBin.prototype.length = function () {\n  return this.content.length;\n};\n\n// maximum offset of content wrt to viewport\n// The amount by which content (after being layed out) is taller than\n// the viewport.\nBin.prototype.maxContentOffset = function Bin_maxContentOffset(width, height) {\n  var contentHeight = this.height(width);\n  var maxOffset = Math.max(contentHeight - height, 0);\n  return maxOffset;\n}\n\n// abstract: returns index of first visible item.\n// @param topOffset: scroll position\n// @param width: width of viewport\n// @param height: height of viewport\n//\nBin.prototype.visibleStartingIndex = mustImplement('visibleStartingIndex');\n\n// abstract: returns number of items visible in viewport.\n// @param topOffset: scroll position\n// @param width: width of viewport\n// @param height: height of viewport\nBin.prototype.numberVisibleWithin = mustImplement('numberVisibleWithin');\n\nBin.prototype.heightAtIndex = function (index) {\n  return this.content[index].height;\n};\n\nBin.prototype.widthAtIndex = function (index) {\n  return this.content[index].width;\n};\n","export default function Entry(height, width, x, y) {\n  this.height   = height;\n  this.width    = width;\n  this.position = {x:x, y:y};\n}\n","import {\n  default as Bin,\n  rangeError\n} from './bin';\nimport Entry from './entry';\n\nexport default function ShelfFirst(content, width) {\n  this._super$constructor(content, width);\n  this._positionEntries = [];\n}\n\nShelfFirst.prototype = Object.create(Bin.prototype);\nShelfFirst.prototype._super$constructor = Bin;\nShelfFirst.prototype.isGrid = function ShelfFirst_isGrid(width) {\n  if (width != null && width !== this.width) {\n    this.flush(0);\n    this.width = width;\n  }\n  var length = this.length();\n  var entry;\n\n  // TODO: cache/memoize\n\n  for (var i = 0; i < length; i++) {\n    entry = this._entryAt(i);\n    if (entry.position.x > 0) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nShelfFirst.prototype.height = function (width) {\n  if (width != null && width !== this.width) {\n    this.flush(0);\n    this.width = width;\n  }\n\n  var length = this.length();\n  if (length === 0) { return 0; }\n\n  // find tallest in last row, add to Y\n  var tallest  = 0;\n  var currentY = 0;\n  var entry;\n\n  for (var i = length - 1; i >= 0; i--) {\n    entry = this._entryAt(i);\n\n    if (currentY > entry.position.y) {\n      break; // end of last row\n    } else if (tallest < entry.height) {\n      tallest = entry.height;\n    } else {\n      // do nothing\n    }\n\n    currentY = entry.position.y;\n  }\n\n  return currentY + tallest;\n};\n\nShelfFirst.prototype.flush = function (position) {\n  var positionEntries = this._positionEntries;\n  if (positionEntries.length > position) {\n    positionEntries.length = position;\n  }\n};\n\nShelfFirst.prototype.numberVisibleWithin = function (topOffset, width, height, withPadding) {\n  if (width !== this.width) {\n    this.flush(0);\n    this.width = width;\n  }\n\n  var startingIndex = this.visibleStartingIndex(topOffset, width, height);\n\n  return this._numberVisibleWithin(startingIndex, height, withPadding);\n};\n\nShelfFirst.prototype._entryAt = function _entryAt(index) {\n  var length = this.length();\n  var width = this.width;\n\n  if (index >= length) {\n    rangeError(length, index);\n  }\n\n  var entry;\n  var entries = this._positionEntries;\n  var entriesLength = entries.length;\n  var startingIndex;\n\n  var y, x, i;\n  var rowHeight = 0;\n  var rowWidth = 0;\n\n  if (index < entriesLength) {\n    return this._positionEntries[index];\n  } else if (entriesLength === 0) {\n    startingIndex = 0;\n    y = 0;\n  } else {\n    startingIndex = entriesLength - 1;\n    entry = this._positionEntries[startingIndex];\n    rowWidth = entry.position.x + entry.width;\n    rowHeight = entry.height;\n    y = entry.position.y;\n    startingIndex++;\n  }\n\n  for (i = startingIndex; i < index + 1; i++) {\n    var currentHeight = this.heightAtIndex(i);\n    var currentWidth = this.widthAtIndex(i);\n\n    if (entry && (currentWidth + rowWidth) > width) {\n      // new row\n      y = entry.position.y + entry.height;\n      x = 0;\n      rowWidth = 0;\n      rowHeight = currentHeight;\n    } else {\n      x = rowWidth;\n    }\n\n    if (currentHeight > rowHeight) {\n      rowHeight = currentHeight;\n    }\n\n    entry = this._positionEntries[i] = new Entry(rowHeight, currentWidth, x, y);\n\n    rowWidth = x + currentWidth;\n  }\n\n  return entry;\n};\n\nShelfFirst.prototype._numberVisibleWithin = function (startingIndex, height, withPadding) {\n  var count = 0;\n  var length = this.length();\n  var entry, position;\n  var currentY = 0;\n  var yOffset = 0;\n\n  if (startingIndex > 0 && startingIndex < length) {\n    yOffset = this._entryAt(startingIndex).position.y;\n  } else {\n    yOffset = 0;\n  }\n\n  var firstRowHeight;\n  for (var i = startingIndex; i < length; i++) {\n    entry = this._entryAt(i);\n    position = entry.position;\n\n    if (currentY === position.y) {\n      // same row\n    } else {\n      currentY = position.y - yOffset;\n      if (withPadding && !firstRowHeight) {\n        firstRowHeight = entry.height;\n      }\n    }\n\n    if (currentY < height) {\n      count++;\n    } else if (withPadding) {\n      withPadding = false;\n      height += Math.max(firstRowHeight, entry.height) + 1;\n      count++;\n    } else {\n      break;\n    }\n  }\n\n  return count;\n};\n\nShelfFirst.prototype.position = function position(index, width) {\n  var length = this.length();\n\n  if (length === 0 || index > length) {\n    rangeError(length, index);\n  }\n\n  if (width !== this.width) {\n    this.flush(0);\n    this.width =  width;\n  }\n\n  return this._entryAt(index).position;\n};\n\nShelfFirst.prototype.visibleStartingIndex = function (topOffset, width, visibleHeight) {\n  if (topOffset <= 0 ) { return 0; }\n\n  if (width != null && width!== this.width) {\n    this.flush(0);\n    this.width = width;\n  }\n  topOffset = Math.min(topOffset, this.maxContentOffset(width, visibleHeight));\n\n  var height = this.height();\n  var length = this.length();\n\n  // Start searching using the last item in the list\n  // and the bottom of the list for calculating the average height.\n\n  // This algorithm is necessary for efficiently finding\n  // the starting index of a list with variable heights\n  // in less than O(n) time.\n\n  // Ideally, the performance will be O(log n).\n  // The algorithm implemented assumes that the best case\n  // is a list of items with all equal heights.\n  // Lists with consistent distributions should arrive\n  // at results fairly quickly as well.\n  var index = length;\n  var bottom = height;\n  var previousIndex;\n\n  for (;;) {\n    // Try to find an item that straddles the top offset\n    // or is flush with it\n    var averageHeight = bottom / index;\n\n    // Guess the index based off the average height\n    index = Math.min(Math.floor(topOffset / averageHeight), length - 1);\n    if (previousIndex === index) {\n      return index;\n    }\n\n    var entry = this._entryAt(index);\n    var position = entry.position;\n\n    var top = position.y;\n    bottom = top + entry.height;\n\n    previousIndex = index;\n\n    if (bottom > topOffset) {\n      // Walk backwards until we find an item that won't be shown\n      while (bottom >= topOffset) {\n        previousIndex = index;\n        index--;\n\n        if (index === -1) {\n          break;\n        }\n        entry = this._entryAt(index);\n        position = entry.position;\n        bottom = position.y + entry.height;\n      }\n\n      return previousIndex;\n    } else if (topOffset === bottom) {\n      // Walk forwards until we find the next one- it should be close\n      while (bottom <= topOffset) {\n        index++;\n        entry = this._entryAt(index);\n        position = entry.position;\n        bottom = position.y + entry.height;\n      }\n      return index;\n    }\n  }\n\n  return -1;\n};\n","import Bin from './bin';\n\nexport default function FixedGrid(content, elementWidth, elementHeight) {\n  this._elementWidth =  elementWidth;\n  this._elementHeight =  elementHeight;\n\n  this._super$constructor(content);\n}\n\nFixedGrid.prototype = Object.create(Bin.prototype);\nFixedGrid.prototype._super$constructor = Bin;\n\nFixedGrid.prototype.flush = function (/* index, to */) {\n\n};\n\nFixedGrid.prototype.isGrid = function (width) {\n  return (Math.floor(width / this.widthAtIndex(0)) || 1) > 1;\n};\n\nFixedGrid.prototype.visibleStartingIndex = function (topOffset, width, height) {\n  topOffset = Math.min(topOffset, this.maxContentOffset(width, height));\n  var columns = Math.floor(width / this.widthAtIndex(0)) || 1;\n\n  return Math.floor(topOffset / this.heightAtIndex(0)) * columns;\n};\n\nFixedGrid.prototype.numberVisibleWithin = function (topOffset, width, height, withPadding) {\n  var startingIndex = this.visibleStartingIndex(topOffset, width, height);\n  var columns = Math.floor(width / this.widthAtIndex(0)) || 1;\n  var length = this.length();\n\n  var rowHeight = this.heightAtIndex(0);\n  var rows = Math.ceil(height / rowHeight);\n\n  var maxNeeded = rows * columns;\n\n  if (withPadding) {\n    maxNeeded += columns;\n  }\n\n  var potentialVisible = length - startingIndex;\n\n  return Math.max(Math.min(maxNeeded, potentialVisible), 0);\n};\n\nFixedGrid.prototype.widthAtIndex = function (/* index */) {\n  return this._elementWidth;\n};\n\nFixedGrid.prototype.heightAtIndex = function (/* index */) {\n  return this._elementHeight;\n};\n\nFixedGrid.prototype.position = function (index, width) {\n  var length = this.length();\n  if (length === 0 || index > length) {\n    rangeError(length, index);\n  }\n\n  var columns = Math.floor(width / this.widthAtIndex(index)) || 1;\n\n  var x = index % columns * this.widthAtIndex(index) | 0;\n  var y = Math.floor(index / columns) * this.heightAtIndex(index);\n\n  return {x:x, y:y};\n};\n\nFixedGrid.prototype.height = function (visibleWidth) {\n  if (typeof visibleWidth !== 'number') {\n    throw new TypeError('height depends on the first argument of visibleWidth(number)');\n  }\n  var length = this.length();\n  if (length === 0) { return 0; }\n\n  var columnCount = Math.max(Math.floor(visibleWidth/this.widthAtIndex(0), 1));\n  columnCount = columnCount > 0 ? columnCount : 1;\n  var rows = Math.ceil(length/columnCount);\n  var totalHeight = rows * this.heightAtIndex(0);\n\n  return totalHeight;\n};\n"],"names":[],"mappings":"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"}